{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import'./Task3.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const FillInBlanksGame=()=>{const[number1,setNumber1]=useState(0);const[number2,setNumber2]=useState(0);const[userAnswer,setUserAnswer]=useState('');const[resultMessage,setResultMessage]=useState('');const[questionIndex,setQuestionIndex]=useState(1);const[correctAnswers,setCorrectAnswers]=useState(0);const[gameOver,setGameOver]=useState(false);const[gameStarted,setGameStarted]=useState(false);const navigate=useNavigate();useEffect(()=>{const generateRandomNumbers=()=>{setNumber1(Math.floor(Math.random()*10)+1);setNumber2(Math.floor(Math.random()*10)+1);setUserAnswer('');setResultMessage('');};if(questionIndex<=5&&gameStarted&&!gameOver){generateRandomNumbers();}else if(gameStarted&&!gameOver){// Set the game over state when the game is started, but questions are finished\nhandleEndGame();}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[questionIndex,gameOver,gameStarted]);const handleEndGame=()=>{setGameOver(true);setResultMessage(\"Game Over! Your Final Score: \".concat(correctAnswers,\"/\").concat(questionIndex-1));};const handleInputChange=event=>{const enteredValue=event.target.value.replace(/[^0-9]/g,'');setUserAnswer(enteredValue);};const handleCheckAnswer=()=>{const answer=parseInt(userAnswer,10);const correctAnswer=number1+number2;if(!isNaN(answer)){if(answer===correctAnswer){setResultMessage(\"Correct! \".concat(number1,\" + \").concat(number2,\" = \").concat(correctAnswer));setCorrectAnswers(prevCorrectAnswers=>prevCorrectAnswers+1);}else{setResultMessage('Oops! Try again.');}}else{setResultMessage('Please enter a valid number.');}};const handleNextQuestion=()=>{setQuestionIndex(prevIndex=>prevIndex+1);};const handleKeyPress=event=>{if(event.key==='Enter'){if(resultMessage===''){handleCheckAnswer();}else{handleNextQuestion();}}};const handleReplay=async()=>{try{const token=localStorage.getItem('token');// Send a request to the server to update task3\nconst response=await fetch(\"\".concat(window.location.origin,\"/updateTask3\"),{method:'POST',headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(token)// Include the JWT token in the headers\n}});if(response.ok){console.log('Task3 updated successfully');}else{console.error('Failed to update Task1');}// Use navigate to go back to the dashboard or any other route\n}catch(error){console.error('Error updating Task3:',error);}setGameOver(false);setQuestionIndex(1);setCorrectAnswers(0);};const handleBack=async()=>{try{const token=localStorage.getItem('token');// Send a request to the server to update task3\nconst response=await fetch(\"\".concat(window.location.origin,\"/updateTask3\"),{method:'POST',headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(token)// Include the JWT token in the headers\n}});if(response.ok){console.log('Task3 updated successfully');}else{console.error('Failed to update Task1');}// Use navigate to go back to the dashboard or any other route\n}catch(error){console.error('Error updating Task3:',error);}navigate('/dashboard');};return/*#__PURE__*/_jsxs(\"div\",{className:\"fill-in-blanks-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"game-description\",children:!gameStarted&&!gameOver&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Fill in the Blanks Game\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Test your addition skills by completing the equations. Enter the correct sum and proceed to the next question. Can you get them all right?\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setGameStarted(true),children:\"Start Game\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-container\",children:[gameStarted&&!gameOver&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Question \",questionIndex,\":\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[number1,\" + \",number2,\" = ?\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:userAnswer,onChange:handleInputChange,onKeyPress:handleKeyPress,placeholder:\"Your answer\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCheckAnswer,children:\"Check Answer\"}),/*#__PURE__*/_jsx(\"div\",{className:\"result-message\",children:resultMessage}),resultMessage&&questionIndex<=5&&/*#__PURE__*/_jsx(\"button\",{className:\"next-question\",onClick:handleNextQuestion,children:\"Next Question\"})]}),gameOver&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:resultMessage}),/*#__PURE__*/_jsx(\"button\",{onClick:handleReplay,children:\"Replay\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleBack,children:\"Back to Dashboard\"})]})]})]});};export default FillInBlanksGame;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsx","_jsx","jsxs","_jsxs","FillInBlanksGame","number1","setNumber1","number2","setNumber2","userAnswer","setUserAnswer","resultMessage","setResultMessage","questionIndex","setQuestionIndex","correctAnswers","setCorrectAnswers","gameOver","setGameOver","gameStarted","setGameStarted","navigate","generateRandomNumbers","Math","floor","random","handleEndGame","concat","handleInputChange","event","enteredValue","target","value","replace","handleCheckAnswer","answer","parseInt","correctAnswer","isNaN","prevCorrectAnswers","handleNextQuestion","prevIndex","handleKeyPress","key","handleReplay","token","localStorage","getItem","response","fetch","window","location","origin","method","headers","Authorization","ok","console","log","error","handleBack","className","children","onClick","type","onChange","onKeyPress","placeholder"],"sources":["/Users/ashitasrivastava/Desktop/TLN/client-1/src/components/Task3.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Task3.css';\n\nconst FillInBlanksGame = () => {\n  const [number1, setNumber1] = useState(0);\n  const [number2, setNumber2] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [resultMessage, setResultMessage] = useState('');\n  const [questionIndex, setQuestionIndex] = useState(1);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const generateRandomNumbers = () => {\n      setNumber1(Math.floor(Math.random() * 10) + 1);\n      setNumber2(Math.floor(Math.random() * 10) + 1);\n      setUserAnswer('');\n      setResultMessage('');\n    };\n\n    if (questionIndex <= 5 && gameStarted && !gameOver) {\n      generateRandomNumbers();\n    } else if (gameStarted && !gameOver) {\n      // Set the game over state when the game is started, but questions are finished\n      handleEndGame();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [questionIndex, gameOver, gameStarted]);\n\n  const handleEndGame = () => {\n    setGameOver(true);\n    setResultMessage(`Game Over! Your Final Score: ${correctAnswers}/${questionIndex - 1}`);\n  };\n\n  const handleInputChange = (event) => {\n    const enteredValue = event.target.value.replace(/[^0-9]/g, '');\n    setUserAnswer(enteredValue);\n  };\n\n  const handleCheckAnswer = () => {\n    const answer = parseInt(userAnswer, 10);\n    const correctAnswer = number1 + number2;\n\n    if (!isNaN(answer)) {\n      if (answer === correctAnswer) {\n        setResultMessage(`Correct! ${number1} + ${number2} = ${correctAnswer}`);\n        setCorrectAnswers((prevCorrectAnswers) => prevCorrectAnswers + 1);\n      } else {\n        setResultMessage('Oops! Try again.');\n      }\n    } else {\n      setResultMessage('Please enter a valid number.');\n    }\n  };\n\n  const handleNextQuestion = () => {\n    setQuestionIndex((prevIndex) => prevIndex + 1);\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      if (resultMessage === '') {\n        handleCheckAnswer();\n      } else {\n        handleNextQuestion();\n      }\n    }\n  };\n\n  const handleReplay = async() => {\n    try {\n      const token = localStorage.getItem('token');\n  \n      // Send a request to the server to update task3\n      const response = await fetch(`${window.location.origin}/updateTask3`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`, // Include the JWT token in the headers\n        },\n      });\n  \n      if (response.ok) {\n        console.log('Task3 updated successfully');\n      } else {\n        console.error('Failed to update Task1');\n      }\n  \n      // Use navigate to go back to the dashboard or any other route\n      \n    } catch (error) {\n      console.error('Error updating Task3:', error);\n    }\n    setGameOver(false);\n    setQuestionIndex(1);\n    setCorrectAnswers(0);\n  };\n\n\n  const handleBack = async () => {\n    try {\n      const token = localStorage.getItem('token');\n  \n      // Send a request to the server to update task3\n      const response = await fetch(`${window.location.origin}/updateTask3`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`, // Include the JWT token in the headers\n        },\n      });\n  \n      if (response.ok) {\n        console.log('Task3 updated successfully');\n      } else {\n        console.error('Failed to update Task1');\n      }\n  \n      // Use navigate to go back to the dashboard or any other route\n      \n    } catch (error) {\n      console.error('Error updating Task3:', error);\n    }\n    navigate('/dashboard');\n  };\n\n\n  return (\n    <div className=\"fill-in-blanks-container\">\n      <div className=\"game-description\">\n        {!gameStarted && !gameOver && (\n          <div>\n            <h1>Fill in the Blanks Game</h1>\n            <p>\n              Test your addition skills by completing the equations. Enter the correct sum and\n              proceed to the next question. Can you get them all right?\n            </p>\n            <button onClick={() => setGameStarted(true)}>Start Game</button>\n          </div>\n        )}\n      </div>\n\n      <div className=\"question-container\">\n        {gameStarted && !gameOver && (\n          <div>\n            <p>Question {questionIndex}:</p>\n            <p>\n              {number1} + {number2} = ?\n            </p>\n            <input\n              type=\"text\"\n              value={userAnswer}\n              onChange={handleInputChange}\n              onKeyPress={handleKeyPress}\n              placeholder=\"Your answer\"\n            />\n            <button onClick={handleCheckAnswer}>Check Answer</button>\n            <div className=\"result-message\">{resultMessage}</div>\n            {resultMessage && questionIndex <= 5 && (\n              <button className=\"next-question\" onClick={handleNextQuestion}>\n                Next Question\n              </button>\n            )}\n          </div>\n        )}\n\n        {gameOver && (\n          <div>\n            <p>{resultMessage}</p>\n            <button onClick={handleReplay}>Replay</button>\n            <button onClick={handleBack}>Back to Dashboard</button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FillInBlanksGame;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAErB,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CAAC,CAAC,CAAC,CACzC,KAAM,CAACU,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,CAAC,CAAC,CACzC,KAAM,CAACY,UAAU,CAAEC,aAAa,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACc,aAAa,CAAEC,gBAAgB,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACgB,aAAa,CAAEC,gBAAgB,CAAC,CAAGjB,QAAQ,CAAC,CAAC,CAAC,CACrD,KAAM,CAACkB,cAAc,CAAEC,iBAAiB,CAAC,CAAGnB,QAAQ,CAAC,CAAC,CAAC,CACvD,KAAM,CAACoB,QAAQ,CAAEC,WAAW,CAAC,CAAGrB,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAACsB,WAAW,CAAEC,cAAc,CAAC,CAAGvB,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAAAwB,QAAQ,CAAGtB,WAAW,CAAC,CAAC,CAE9BD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAwB,qBAAqB,CAAGA,CAAA,GAAM,CAClChB,UAAU,CAACiB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAG,EAAE,CAAC,CAAG,CAAC,CAAC,CAC9CjB,UAAU,CAACe,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAG,EAAE,CAAC,CAAG,CAAC,CAAC,CAC9Cf,aAAa,CAAC,EAAE,CAAC,CACjBE,gBAAgB,CAAC,EAAE,CAAC,CACtB,CAAC,CAED,GAAIC,aAAa,EAAI,CAAC,EAAIM,WAAW,EAAI,CAACF,QAAQ,CAAE,CAClDK,qBAAqB,CAAC,CAAC,CACzB,CAAC,IAAM,IAAIH,WAAW,EAAI,CAACF,QAAQ,CAAE,CACnC;AACAS,aAAa,CAAC,CAAC,CACjB,CACA;AACF,CAAC,CAAE,CAACb,aAAa,CAAEI,QAAQ,CAAEE,WAAW,CAAC,CAAC,CAE1C,KAAM,CAAAO,aAAa,CAAGA,CAAA,GAAM,CAC1BR,WAAW,CAAC,IAAI,CAAC,CACjBN,gBAAgB,iCAAAe,MAAA,CAAiCZ,cAAc,MAAAY,MAAA,CAAId,aAAa,CAAG,CAAC,CAAE,CAAC,CACzF,CAAC,CAED,KAAM,CAAAe,iBAAiB,CAAIC,KAAK,EAAK,CACnC,KAAM,CAAAC,YAAY,CAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACC,OAAO,CAAC,SAAS,CAAE,EAAE,CAAC,CAC9DvB,aAAa,CAACoB,YAAY,CAAC,CAC7B,CAAC,CAED,KAAM,CAAAI,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,KAAM,CAAAC,MAAM,CAAGC,QAAQ,CAAC3B,UAAU,CAAE,EAAE,CAAC,CACvC,KAAM,CAAA4B,aAAa,CAAGhC,OAAO,CAAGE,OAAO,CAEvC,GAAI,CAAC+B,KAAK,CAACH,MAAM,CAAC,CAAE,CAClB,GAAIA,MAAM,GAAKE,aAAa,CAAE,CAC5BzB,gBAAgB,aAAAe,MAAA,CAAatB,OAAO,QAAAsB,MAAA,CAAMpB,OAAO,QAAAoB,MAAA,CAAMU,aAAa,CAAE,CAAC,CACvErB,iBAAiB,CAAEuB,kBAAkB,EAAKA,kBAAkB,CAAG,CAAC,CAAC,CACnE,CAAC,IAAM,CACL3B,gBAAgB,CAAC,kBAAkB,CAAC,CACtC,CACF,CAAC,IAAM,CACLA,gBAAgB,CAAC,8BAA8B,CAAC,CAClD,CACF,CAAC,CAED,KAAM,CAAA4B,kBAAkB,CAAGA,CAAA,GAAM,CAC/B1B,gBAAgB,CAAE2B,SAAS,EAAKA,SAAS,CAAG,CAAC,CAAC,CAChD,CAAC,CAED,KAAM,CAAAC,cAAc,CAAIb,KAAK,EAAK,CAChC,GAAIA,KAAK,CAACc,GAAG,GAAK,OAAO,CAAE,CACzB,GAAIhC,aAAa,GAAK,EAAE,CAAE,CACxBuB,iBAAiB,CAAC,CAAC,CACrB,CAAC,IAAM,CACLM,kBAAkB,CAAC,CAAC,CACtB,CACF,CACF,CAAC,CAED,KAAM,CAAAI,YAAY,CAAG,KAAAA,CAAA,GAAW,CAC9B,GAAI,CACF,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3C;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAtB,MAAA,CAAIuB,MAAM,CAACC,QAAQ,CAACC,MAAM,iBAAgB,CACpEC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClCC,aAAa,WAAA5B,MAAA,CAAYkB,KAAK,CAAI;AACpC,CACF,CAAC,CAAC,CAEF,GAAIG,QAAQ,CAACQ,EAAE,CAAE,CACfC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC,CAC3C,CAAC,IAAM,CACLD,OAAO,CAACE,KAAK,CAAC,wBAAwB,CAAC,CACzC,CAEA;AAEF,CAAE,MAAOA,KAAK,CAAE,CACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC/C,CACAzC,WAAW,CAAC,KAAK,CAAC,CAClBJ,gBAAgB,CAAC,CAAC,CAAC,CACnBE,iBAAiB,CAAC,CAAC,CAAC,CACtB,CAAC,CAGD,KAAM,CAAA4C,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF,KAAM,CAAAf,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3C;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAtB,MAAA,CAAIuB,MAAM,CAACC,QAAQ,CAACC,MAAM,iBAAgB,CACpEC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClCC,aAAa,WAAA5B,MAAA,CAAYkB,KAAK,CAAI;AACpC,CACF,CAAC,CAAC,CAEF,GAAIG,QAAQ,CAACQ,EAAE,CAAE,CACfC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC,CAC3C,CAAC,IAAM,CACLD,OAAO,CAACE,KAAK,CAAC,wBAAwB,CAAC,CACzC,CAEA;AAEF,CAAE,MAAOA,KAAK,CAAE,CACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC/C,CACAtC,QAAQ,CAAC,YAAY,CAAC,CACxB,CAAC,CAGD,mBACElB,KAAA,QAAK0D,SAAS,CAAC,0BAA0B,CAAAC,QAAA,eACvC7D,IAAA,QAAK4D,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAC9B,CAAC3C,WAAW,EAAI,CAACF,QAAQ,eACxBd,KAAA,QAAA2D,QAAA,eACE7D,IAAA,OAAA6D,QAAA,CAAI,yBAAuB,CAAI,CAAC,cAChC7D,IAAA,MAAA6D,QAAA,CAAG,4IAGH,CAAG,CAAC,cACJ7D,IAAA,WAAQ8D,OAAO,CAAEA,CAAA,GAAM3C,cAAc,CAAC,IAAI,CAAE,CAAA0C,QAAA,CAAC,YAAU,CAAQ,CAAC,EAC7D,CACN,CACE,CAAC,cAEN3D,KAAA,QAAK0D,SAAS,CAAC,oBAAoB,CAAAC,QAAA,EAChC3C,WAAW,EAAI,CAACF,QAAQ,eACvBd,KAAA,QAAA2D,QAAA,eACE3D,KAAA,MAAA2D,QAAA,EAAG,WAAS,CAACjD,aAAa,CAAC,GAAC,EAAG,CAAC,cAChCV,KAAA,MAAA2D,QAAA,EACGzD,OAAO,CAAC,KAAG,CAACE,OAAO,CAAC,MACvB,EAAG,CAAC,cACJN,IAAA,UACE+D,IAAI,CAAC,MAAM,CACXhC,KAAK,CAAEvB,UAAW,CAClBwD,QAAQ,CAAErC,iBAAkB,CAC5BsC,UAAU,CAAExB,cAAe,CAC3ByB,WAAW,CAAC,aAAa,CAC1B,CAAC,cACFlE,IAAA,WAAQ8D,OAAO,CAAE7B,iBAAkB,CAAA4B,QAAA,CAAC,cAAY,CAAQ,CAAC,cACzD7D,IAAA,QAAK4D,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAAEnD,aAAa,CAAM,CAAC,CACpDA,aAAa,EAAIE,aAAa,EAAI,CAAC,eAClCZ,IAAA,WAAQ4D,SAAS,CAAC,eAAe,CAACE,OAAO,CAAEvB,kBAAmB,CAAAsB,QAAA,CAAC,eAE/D,CAAQ,CACT,EACE,CACN,CAEA7C,QAAQ,eACPd,KAAA,QAAA2D,QAAA,eACE7D,IAAA,MAAA6D,QAAA,CAAInD,aAAa,CAAI,CAAC,cACtBV,IAAA,WAAQ8D,OAAO,CAAEnB,YAAa,CAAAkB,QAAA,CAAC,QAAM,CAAQ,CAAC,cAC9C7D,IAAA,WAAQ8D,OAAO,CAAEH,UAAW,CAAAE,QAAA,CAAC,mBAAiB,CAAQ,CAAC,EACpD,CACN,EACE,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAA1D,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}