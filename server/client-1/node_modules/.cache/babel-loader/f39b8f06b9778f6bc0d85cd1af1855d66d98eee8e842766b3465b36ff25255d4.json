{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import'./Task2.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const MatchingGame=()=>{const navigate=useNavigate();const allPairs=[{fruit:'Apple',color:'Red'},{fruit:'Banana',color:'Yellow'},{fruit:'Cherry',color:'Red'},{fruit:'Grapes',color:'Green'},{fruit:'Oranges',color:'Orange'},{fruit:'Kiwi',color:'Brown'},{fruit:'Strawberry',color:'Red'},{fruit:'Watermelon',color:'Green'},{fruit:'Pineapple',color:'Yellow'},{fruit:'Mango',color:'Yellow-Orange'}];const shuffleArray=array=>{const shuffledArray=array.slice();for(let i=shuffledArray.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[shuffledArray[i],shuffledArray[j]]=[shuffledArray[j],shuffledArray[i]];}return shuffledArray;};const getRandomSet=()=>{const shuffledPairs=shuffleArray(allPairs);const selectedPairs=shuffledPairs.slice(0,4);const shuffledFruits=shuffleArray(selectedPairs.map(pair=>pair.fruit));const shuffledColors=shuffleArray(selectedPairs.map(pair=>pair.color));return{pairs:selectedPairs,fruits:shuffledFruits,colors:shuffledColors};};const[feedback,setFeedback]=useState('');const[matches,setMatches]=useState([]);const[colorOrder,setColorOrder]=useState([]);const[gameSet,setGameSet]=useState(getRandomSet());const handleDragStart=(event,fruit)=>{event.dataTransfer.setData('fruit',fruit);};const handleDragOver=event=>{event.preventDefault();};const handleDrop=(event,color)=>{event.preventDefault();const droppedFruit=event.dataTransfer.getData('fruit');const isCorrectMatch=gameSet.pairs.some(pair=>pair.fruit===droppedFruit&&pair.color===color);if(isCorrectMatch){setFeedback('Correct Match!');setMatches([...matches,droppedFruit]);}else{setFeedback('Wrong Match. Try Again!');}};const resetGame=async()=>{try{const token=localStorage.getItem('token');// Send a request to the server to update task2\nconst response=await fetch(\"\".concat(window.location.origin,\"/updateTask2\"),{method:'POST',headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(token)// Include the JWT token in the headers\n}});if(response.ok){console.log('Task2 updated successfully');}else{console.error('Failed to update Task2');}// Use navigate to go back to the dashboard or any other route\n}catch(error){console.error('Error updating Task2:',error);}setFeedback('');setMatches([]);setGameSet(getRandomSet());setColorOrder(shuffleArray(gameSet.colors));};const goBackToDashboard=async()=>{try{const token=localStorage.getItem('token');// Send a request to the server to update task2\nconst response=await fetch('http://localhost:5000/updateTask2',{method:'POST',headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(token)// Include the JWT token in the headers\n}});if(response.ok){console.log('Task2 updated successfully');}else{console.error('Failed to update Task2');}// Use navigate to go back to the dashboard or any other route\n}catch(error){console.error('Error updating Task2:',error);}navigate('/dashboard');};useEffect(()=>{if(matches.length===gameSet.fruits.length){setFeedback('You did it!');}},[matches,gameSet.fruits.length]);useEffect(()=>{setColorOrder(shuffleArray(gameSet.colors));},[gameSet]);return/*#__PURE__*/_jsxs(\"div\",{className:\"matching-game-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"matching-game-heading\",children:\"Matching Game\"}),/*#__PURE__*/_jsx(\"p\",{className:\"matching-game-description\",children:\"Match the fruit with its color\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"matching-game\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"column\",children:gameSet.fruits.map((fruit,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"fruit \".concat(matches.includes(fruit)?'matched':''),draggable:true,onDragStart:e=>handleDragStart(e,fruit),children:fruit},index))}),/*#__PURE__*/_jsx(\"div\",{className:\"column\",children:colorOrder.map((color,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"color-box \".concat(matches.includes(color)?'matched':''),onDragOver:handleDragOver,onDrop:e=>{handleDrop(e,color);},children:color},index))}),/*#__PURE__*/_jsx(\"p\",{className:\"feedback\",children:feedback})]}),feedback==='You did it!'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"button next-question\",onClick:resetGame,children:\"Restart Game\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button next-question\",onClick:goBackToDashboard,children:\"Go Back to Dashboard\"})]})]});};export default MatchingGame;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MatchingGame","navigate","allPairs","fruit","color","shuffleArray","array","shuffledArray","slice","i","length","j","Math","floor","random","getRandomSet","shuffledPairs","selectedPairs","shuffledFruits","map","pair","shuffledColors","pairs","fruits","colors","feedback","setFeedback","matches","setMatches","colorOrder","setColorOrder","gameSet","setGameSet","handleDragStart","event","dataTransfer","setData","handleDragOver","preventDefault","handleDrop","droppedFruit","getData","isCorrectMatch","some","resetGame","token","localStorage","getItem","response","fetch","concat","window","location","origin","method","headers","Authorization","ok","console","log","error","goBackToDashboard","className","children","index","includes","draggable","onDragStart","e","onDragOver","onDrop","onClick"],"sources":["/Users/ashitasrivastava/Desktop/TLN/client-1/src/components/Task2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Task2.css';\n\nconst MatchingGame = () => {\n  const navigate = useNavigate();\n  const allPairs = [\n    { fruit: 'Apple', color: 'Red' },\n    { fruit: 'Banana', color: 'Yellow' },\n    { fruit: 'Cherry', color: 'Red' },\n    { fruit: 'Grapes', color: 'Green' },\n    { fruit: 'Oranges', color: 'Orange' },\n    { fruit: 'Kiwi', color: 'Brown' },\n    { fruit: 'Strawberry', color: 'Red' },\n    { fruit: 'Watermelon', color: 'Green' },\n    { fruit: 'Pineapple', color: 'Yellow' },\n    { fruit: 'Mango', color: 'Yellow-Orange' },\n  ];\n\n  const shuffleArray = (array) => {\n    const shuffledArray = array.slice();\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n    }\n    return shuffledArray;\n  };\n\n  const getRandomSet = () => {\n    const shuffledPairs = shuffleArray(allPairs);\n    const selectedPairs = shuffledPairs.slice(0, 4);\n    const shuffledFruits = shuffleArray(selectedPairs.map((pair) => pair.fruit));\n    const shuffledColors = shuffleArray(selectedPairs.map((pair) => pair.color));\n\n    return {\n      pairs: selectedPairs,\n      fruits: shuffledFruits,\n      colors: shuffledColors,\n    };\n  };\n\n  const [feedback, setFeedback] = useState('');\n  const [matches, setMatches] = useState([]);\n  const [colorOrder, setColorOrder] = useState([]);\n  const [gameSet, setGameSet] = useState(getRandomSet());\n\n  const handleDragStart = (event, fruit) => {\n    event.dataTransfer.setData('fruit', fruit);\n  };\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n  };\n\n  const handleDrop = (event, color) => {\n    event.preventDefault();\n\n    const droppedFruit = event.dataTransfer.getData('fruit');\n    const isCorrectMatch = gameSet.pairs.some((pair) => pair.fruit === droppedFruit && pair.color === color);\n\n    if (isCorrectMatch) {\n      setFeedback('Correct Match!');\n      setMatches([...matches, droppedFruit]);\n    } else {\n      setFeedback('Wrong Match. Try Again!');\n    }\n  };\n\n  const resetGame = async() => {\n    try {\n      const token = localStorage.getItem('token');\n  \n      // Send a request to the server to update task2\n      const response = await fetch(`${window.location.origin}/updateTask2`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`, // Include the JWT token in the headers\n        },\n      });\n  \n      if (response.ok) {\n        console.log('Task2 updated successfully');\n      } else {\n        console.error('Failed to update Task2');\n      }\n  \n      // Use navigate to go back to the dashboard or any other route\n      \n    } catch (error) {\n      console.error('Error updating Task2:', error);\n    }\n    setFeedback('');\n    setMatches([]);\n    setGameSet(getRandomSet());\n    setColorOrder(shuffleArray(gameSet.colors));\n  };\n\n  const goBackToDashboard = async() => {\n    try {\n      const token = localStorage.getItem('token');\n  \n      // Send a request to the server to update task2\n      const response = await fetch('http://localhost:5000/updateTask2', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`, // Include the JWT token in the headers\n        },\n      });\n  \n      if (response.ok) {\n        console.log('Task2 updated successfully');\n      } else {\n        console.error('Failed to update Task2');\n      }\n  \n      // Use navigate to go back to the dashboard or any other route\n      \n    } catch (error) {\n      console.error('Error updating Task2:', error);\n    }\n    navigate('/dashboard');\n  };\n\n  useEffect(() => {\n    if (matches.length === gameSet.fruits.length) {\n      setFeedback('You did it!');\n    }\n  }, [matches, gameSet.fruits.length]);\n\n  useEffect(() => {\n    setColorOrder(shuffleArray(gameSet.colors));\n  }, [gameSet]);\n\n  return (\n    <div className=\"matching-game-container\">\n      <h1 className=\"matching-game-heading\">Matching Game</h1>\n      <p className=\"matching-game-description\">Match the fruit with its color</p>\n      <div className=\"matching-game\">\n        <div className=\"column\">\n          {gameSet.fruits.map((fruit, index) => (\n            <div\n              key={index}\n              className={`fruit ${matches.includes(fruit) ? 'matched' : ''}`}\n              draggable\n              onDragStart={(e) => handleDragStart(e, fruit)}\n            >\n              {fruit}\n            </div>\n          ))}\n        </div>\n        <div className=\"column\">\n          {colorOrder.map((color, index) => (\n            <div\n              key={index}\n              className={`color-box ${matches.includes(color) ? 'matched' : ''}`}\n              onDragOver={handleDragOver}\n              onDrop={(e) => {\n                handleDrop(e, color);\n              }}\n            >\n              {color}\n            </div>\n          ))}\n        </div>\n        <p className=\"feedback\">{feedback}</p>\n      </div>\n      {feedback === 'You did it!' && (\n        <>\n        <button className=\"button next-question\" onClick={resetGame}>\n          Restart Game\n        </button>\n        <button className=\"button next-question\" onClick={goBackToDashboard}>\n            Go Back to Dashboard\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MatchingGame;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}