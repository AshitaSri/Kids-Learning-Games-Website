{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import'./Task1.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const SmallestNumberGame=()=>{const[numbers,setNumbers]=useState([]);const[result,setResult]=useState('');const[questionIndex,setQuestionIndex]=useState(0);const[correctAnswers,setCorrectAnswers]=useState(0);const[startTime,setStartTime]=useState(null);const[endTime,setEndTime]=useState(null);const[gameStarted,setGameStarted]=useState(false);const[showResult,setShowResult]=useState(false);const navigate=useNavigate();// Get the navigate function here\nuseEffect(()=>{if(gameStarted){startNewSet();}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[questionIndex,gameStarted]);const startNewSet=()=>{if(questionIndex===5){setEndTime(new Date());calculateScore();}else{const newNumbers=Array.from({length:5},()=>Math.floor(Math.random()*100)+1);setNumbers(newNumbers);setResult('');setShowResult(false);setStartTime(new Date());}};const formatTime=seconds=>{const minutes=Math.floor(seconds/60);const remainingSeconds=(seconds%60).toFixed(2);return\"\".concat(minutes,\" min \").concat(remainingSeconds,\" seconds\");};const checkSmallestNumber=(selectedNumber,selectedIndex)=>{const isSmallest=numbers.every((number,index)=>index===selectedIndex||selectedNumber<=number);if(isSmallest){setResult('YES! You are right!');setCorrectAnswers(prevCorrectAnswers=>prevCorrectAnswers+1);}else{setResult('OOPS! You are wrong.');}setShowResult(true);setTimeout(()=>{setShowResult(false);setQuestionIndex(prevIndex=>prevIndex+1);},1000);};const calculateScore=()=>{if(endTime){const accuracy=correctAnswers/5*100;setResult(\"Game Over! Your score: \".concat(correctAnswers,\"/5\\nAccuracy: \").concat(accuracy.toFixed(0),\"%\"));}};const restartGame=async()=>{// Increment task1 by 5 in the database\ntry{const token=localStorage.getItem('token');// Send a request to the server to update task1\nconst response=await fetch('http://localhost:5000/updateTask1',{method:'POST',headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(token)// Include the JWT token in the headers\n}});if(response.ok){console.log('Task1 updated successfully');}else{console.error('Failed to update Task1');}// Use navigate to go back to the dashboard or any other route\n}catch(error){console.error('Error updating Task1:',error);}setQuestionIndex(0);setResult('');setCorrectAnswers(0);setStartTime(new Date());setEndTime(null);setGameStarted(true);setShowResult(prev=>!prev);};const goBack=async()=>{try{const token=localStorage.getItem('token');// Send a request to the server to update task1\nconst response=await fetch(\"\".concat(window.location.origin,\"/updateTask1\"),{method:'POST',headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(token)// Include the JWT token in the headers\n}});if(response.ok){console.log('Task1 updated successfully');}else{console.error('Failed to update Task1');}// Use navigate to go back to the dashboard or any other route\n}catch(error){console.error('Error updating Task1:',error);}navigate('/dashboard');};return/*#__PURE__*/_jsxs(\"div\",{className:\"game-container\",children:[!gameStarted&&/*#__PURE__*/_jsxs(\"div\",{className:\"game-description\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Select the Smallest Number\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Test your skills by identifying the smallest number in each set of numbers. Click on the number you believe is the smallest. Can you get them all right?\"})]}),gameStarted&&questionIndex<=4&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Select the smallest number !\"}),/*#__PURE__*/_jsx(\"div\",{className:\"number-buttons\",children:numbers.map((number,index)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>checkSmallestNumber(number,index),children:number},index))}),/*#__PURE__*/_jsx(\"p\",{children:showResult&&result})]}),questionIndex===5&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Game Over!\"}),endTime&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Total time: \",formatTime((endTime-startTime)/1000)]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Your score: \",correctAnswers,\"/5\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Accuracy: \",correctAnswers/5*100,\"%\"]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:restartGame,children:\"Restart Game\"}),/*#__PURE__*/_jsx(\"button\",{onClick:goBack,children:\"Go Back\"})]}),!gameStarted&&/*#__PURE__*/_jsx(\"div\",{className:\"start-button-container\",children:/*#__PURE__*/_jsx(\"button\",{className:\"start-button\",onClick:restartGame,children:\"Start Game\"})})]});};export default SmallestNumberGame;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsx","_jsx","jsxs","_jsxs","SmallestNumberGame","numbers","setNumbers","result","setResult","questionIndex","setQuestionIndex","correctAnswers","setCorrectAnswers","startTime","setStartTime","endTime","setEndTime","gameStarted","setGameStarted","showResult","setShowResult","navigate","startNewSet","Date","calculateScore","newNumbers","Array","from","length","Math","floor","random","formatTime","seconds","minutes","remainingSeconds","toFixed","concat","checkSmallestNumber","selectedNumber","selectedIndex","isSmallest","every","number","index","prevCorrectAnswers","setTimeout","prevIndex","accuracy","restartGame","token","localStorage","getItem","response","fetch","method","headers","Authorization","ok","console","log","error","prev","goBack","window","location","origin","className","children","map","onClick"],"sources":["/Users/ashitasrivastava/Desktop/TLN/client-1/src/components/Task1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Task1.css';\n\nconst SmallestNumberGame = () => {\n  const [numbers, setNumbers] = useState([]);\n  const [result, setResult] = useState('');\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const [endTime, setEndTime] = useState(null);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [showResult, setShowResult] = useState(false);\n  const navigate = useNavigate(); // Get the navigate function here\n\n  useEffect(() => {\n    if (gameStarted) {\n      startNewSet();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [questionIndex, gameStarted]);\n\n  const startNewSet = () => {\n    if (questionIndex === 5) {\n      setEndTime(new Date());\n      calculateScore();\n    } else {\n      const newNumbers = Array.from({ length: 5 }, () => Math.floor(Math.random() * 100) + 1);\n      setNumbers(newNumbers);\n      setResult('');\n      setShowResult(false);\n      setStartTime(new Date());\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = (seconds % 60).toFixed(2);\n    return `${minutes} min ${remainingSeconds} seconds`;\n  };\n\n  const checkSmallestNumber = (selectedNumber, selectedIndex) => {\n    const isSmallest = numbers.every(\n      (number, index) => index === selectedIndex || selectedNumber <= number\n    );\n\n    if (isSmallest) {\n      setResult('YES! You are right!');\n      setCorrectAnswers((prevCorrectAnswers) => prevCorrectAnswers + 1);\n    } else {\n      setResult('OOPS! You are wrong.');\n    }\n\n    setShowResult(true);\n    setTimeout(() => {\n      setShowResult(false);\n      setQuestionIndex((prevIndex) => prevIndex + 1);\n    }, 1000);\n  };\n\n  const calculateScore = () => {\n    if (endTime) {\n      const accuracy = (correctAnswers / 5) * 100;\n      setResult(`Game Over! Your score: ${correctAnswers}/5\\nAccuracy: ${accuracy.toFixed(0)}%`);\n    }\n  };\n\n  const restartGame = async () => {\n    // Increment task1 by 5 in the database\n    try {\n      const token = localStorage.getItem('token');\n  \n      // Send a request to the server to update task1\n      const response = await fetch('http://localhost:5000/updateTask1', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`, // Include the JWT token in the headers\n        },\n      });\n  \n      if (response.ok) {\n        console.log('Task1 updated successfully');\n      } else {\n        console.error('Failed to update Task1');\n      }\n  \n      // Use navigate to go back to the dashboard or any other route\n      \n    } catch (error) {\n      console.error('Error updating Task1:', error);\n    }\n\n    setQuestionIndex(0);\n    setResult('');\n    setCorrectAnswers(0);\n    setStartTime(new Date());\n    setEndTime(null);\n    setGameStarted(true);\n    setShowResult((prev) => !prev);\n  };\n\n  const goBack = async () => {\n    try {\n      const token = localStorage.getItem('token');\n  \n      // Send a request to the server to update task1\n      const response = await fetch(`${window.location.origin}/updateTask1`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`, // Include the JWT token in the headers\n        },\n      });\n  \n      if (response.ok) {\n        console.log('Task1 updated successfully');\n      } else {\n        console.error('Failed to update Task1');\n      }\n  \n      // Use navigate to go back to the dashboard or any other route\n      \n    } catch (error) {\n      console.error('Error updating Task1:', error);\n    }\n    navigate('/dashboard');\n  };\n\n\n\n  return (\n    <div className=\"game-container\">\n      {!gameStarted && (\n        <div className=\"game-description\">\n          <h1>Select the Smallest Number</h1>\n          <p>\n            Test your skills by identifying the smallest number in each set of numbers. Click on\n            the number you believe is the smallest. Can you get them all right?\n          </p>\n        </div>\n      )}\n\n      {gameStarted && questionIndex <= 4 && (\n        <div>\n          <p>Select the smallest number !</p>\n          <div className=\"number-buttons\">\n            {numbers.map((number, index) => (\n              <button key={index} onClick={() => checkSmallestNumber(number, index)}>\n                {number}\n              </button>\n            ))}\n          </div>\n          <p>{showResult && result}</p>\n        </div>\n      )}\n\n      {questionIndex === 5 && (\n        <div>\n          <p>Game Over!</p>\n          {endTime && (\n            <div>\n              <p>Total time: {formatTime((endTime - startTime) / 1000)}</p>\n              <p>Your score: {correctAnswers}/5</p>\n              <p>Accuracy: {(correctAnswers / 5) * 100}%</p>\n            </div>\n          )}\n          <button onClick={restartGame}>Restart Game</button>\n          <button onClick={goBack}>Go Back</button>\n        </div>\n      )}\n\n      {!gameStarted && (\n        <div className=\"start-button-container\">\n          <button className=\"start-button\" onClick={restartGame}>\n            Start Game\n          </button>\n          \n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SmallestNumberGame;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}